html, body {
    width: 100%;
    margin: 0;
    /* Gradient background animation */
    /* Creates a linear gradient that's diagonal */
    background: linear-gradient(-45deg, rgb(248, 185, 250), #cbb5f3, #d7fddf,#b9ccf7);
    background-size: 400% 400%; /*expanded the background size so the linear animation works*/
    animation: gradient 15s ease infinite; /* using keyframe to animate the gradient over 15 seconds with an infinite loop */
    height: 100vh; 
}

/* Keyframe animation for gradient background */
@keyframes gradient {
  0% {
      background-position: 0% 50%; /* Gradient starts on the left, centered vertically */
  }                                /*makes it initially appear that the gradient starts on the left side while staying centered vertically.*/
  50% {
      background-position: 100% 50%; /*Gradient moves to the right, staying centered vertically, */
  }                                  /*gradient is positioned at the right edge (100%) horizontally and at the center (50%) vertically */
  
  100% {
      background-position: 0% 50%; /* Gradient loops back to the starting position */
  }
}


.custom-btn {
  appearance: none;
  background-color: #FFFFFF;
  border-radius: 40em;
  border-style: none;
  box-shadow: #ADCFFF 0 -12px 6px inset; /*colour of shadow / horizontal offset of shadow (shadow doesnt move horizontally from button)/ vertical offset of shadow (shadow shifts upwards)/ blur radius (appears softer) / inset: appear inside the button */
  color: #000000;
  font-size: 1.2rem;
  font-weight: 700;
  width: 150px; 
  margin-left: 35%;
}

.custom-btn:hover {
  background-color: #ffabf1;
  box-shadow: #ff67db 0 -6px 8px inset;
  transform: scale(1.125);
}

.custom-btn:active {
  transform: scale(1.025); /* when you click the button it will slightly decrease in size to make it look like it's being clicked*/
}

.modal-content  {
    border-radius: 5px !important; /*!important to override the original modal styles */
    border-style:solid !important;
    border-width:0.1em;
    border-color: var(--primary-color);
} 

.modal-body {
    border-top-color: var(--primary-color);
    border-top-width: 0.1em;
    border-top-style: solid;
}


.modal-header {
border-bottom: var(--bs-modal-header-border-width) solid var(--primary-color);
border-bottom-width: 0.2em;
background: rgb(255, 192, 239);
border-radius: 5px 5px 0px 0px;

}

.toast {
    position: fixed;
    top: 1rem;
    right: 1rem;
    z-index: 1000;
    width: 300px;
    background-color: #f1aeff;
	border-color: #f1aeff;
    color: #fff;
    border-radius: 50px;
    padding: 0.5rem;
    opacity: 0;
}

.toast.show {
    opacity: 1;
}


.logout {
    background-color: #cfffc4;
    border: 2px solid #000000;
    border-radius: 30px;
    box-shadow: #000000 4px 4px 0 0;
    display: inline-block;
    text-align: center;
}


.logout:active {
  box-shadow: #000000 2px 2px 0 0;
  background-color: #9af985;
  transform: translate(2px, 2px); /*moves the element 2 pixels to the right and 2 pixels down when clicked*/
}


@keyframes slideOut { /* At the start of the animation (0%), set the initial state */
  0% {
    transform: translateX(0); /* Element stays in its original position */
    opacity: 1; /* Element is fully opaque (visible) */
  }
  /* At the end of the animation (100%), set the final state */
  100% {
    transform: translateX(-100%); /* Element is translated completely to the right */
    opacity: 0; /* Element becomes fully transparent (fades out) */
  }
}

/* Apply the slideOut animation to elements with the .slide-out class */
.slide-out {
  animation: slideOut 0.5s ease forwards; /* Use slideOut animation for 0.5 seconds with ease timing function */
                                           /* Apply the styles defined at the end of the animation even after it ends */
}


.fa-trash-can:hover {
    transform: scale(1.5);
 
}

.fa-trash-can:active {
	transform: scale(1.05); 
}

.btn-check:checked+.btn, .btn.active, .btn.show, .btn:first-child:active, :not(.btn-check)+.btn:active {
    border-color: transparent !important; /*hides black border that showed when it was clicked*/
}





.fa-trash-can {
  position: relative; /* Ensures the title is positioned relative to the icon */
}

/* Title text */
.fa-trash-can::after {
  content: attr(trash-title); /* Display the value of the title attribute as the tooltip text */
  position: absolute;
  background-color: rgba(246, 0, 209, 0.8); /* Background color of the tooltip */
  color: white; 
  padding: 4px 8px; 
  border-radius: 4px; /* Rounded corners */
  bottom: 15px; /* Position the title above the trashcan */
  left: 50%; /* Center it above the trashcan */
  transform: translateX(-50%); /* Adjust horizontally to center */
  opacity: 0; /* Initially hide until hovered */
  font-size: 0.3rem;
  transition: opacity 0.3s ease; /* Smooth transition for opacity */
}

/* Show the delete title on hover */
.fa-trash-can:hover::after {
  opacity: 1; /* Make the title visible */
}

.heading {
    color: rgb(255, 225, 253);
    font-size: 40px;
    text-shadow: -1px 1px 2px #f893ea,
                  1px 1px 2px #f893ea,
                  1px -1px 0 #f893ea,
                  -1px -1px 0 #f893ea;
}

@media only screen and (max-width: 500px) {
    /* For mobile phones: */
    button.btn.custom-btn {
        margin-left: 27%;
    }
  }
  
  .card {
	box-shadow: #2c2c2c 4px 4px 0 0;
	border: black solid;
}